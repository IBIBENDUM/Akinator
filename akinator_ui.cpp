#include <stdio.h>
#include <wchar.h>
#include <wctype.h>
#include <assert.h>

#include "Libs/tree.h"
#include "Libs/tree_text_logs.h"
#include "Libs/colors.h"
#include "akinator.h"
#include "akinator_ui.h"

wchar_t akin_get_input()
{


    wchar_t input = getwchar();
    while (iswspace(input))
        input = getwchar();

    wchar_t ch = 0;
    do {
        ch = getwchar();
    } while (ch && ch != L'\n' && ch != WEOF);

    return towlower(input);
}

bool akin_get_answer()
{
    return (akin_get_input() == L'–¥');
}

//~~~~~~~~~~~~~~~~~~~~~PRINT_FUNCTIONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void akin_print_guess_correct()
{
    wprintf(L"üéâüéâüéâ –Ø —É–≥–∞–¥–∞–ª üéâüéâüéâ\n");
}

void akin_print_add_node_start_msg()
{
    wprintf(L"ü§î –•–æ—Ä–æ—à–æ, –∫—Ç–æ –∂–µ —ç—Ç–æ? ü§î\n");
}

void akin_print_obj_question(wchar_t* str_1, wchar_t* str_2)
{
    wprintf(L"–ß–µ–º –∂–µ %ls –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç %ls?\n", str_1, str_2);
}

void akin_dump_tree(Akinator* akin)
{
    assert(akin);
    Tree_node root = tree_get_root(akin->tree);
    tree_text_dump(root);
}

void akin_print_guess_question(Tree_node node)
{
    wchar_t* value = NULL;
    tree_get_node_value(node, &value);
    wprintf(L"–û–Ω–æ %ls? ([–¥]–∞ / [*]–µ—Ç)\n", value);
}

void akin_print_guess_start_msg()
{
    wprintf(L"" PAINT_TEXT(COLOR_LIGHT_CYAN, "–ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —É–≥–∞–¥—ã–≤–∞–Ω–∏—é!\n"));
}

void akin_print_main_wrong_input_msg()
{
    wprintf(L"" PAINT_TEXT(COLOR_LIGHT_CYAN, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–ø—Ü–∏—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n"));
}

void akin_print_menu()
{
    wprintf(L"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
    wprintf(L"–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è?\n"
           L"[—É] - —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ\n"
           L"[–¥] - –¥–µ—Ä–µ–≤–æ\n"
           L"[–æ] - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ\n"
           L"[—Å] - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ\n"
           L"[—ã] - —ã–π—Ç–∏\n");
    wprintf(L"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
}
